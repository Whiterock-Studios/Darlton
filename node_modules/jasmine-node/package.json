{
  "_args": [
    [
      "jasmine-node@git://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
      "C:\\Users\\Sam\\Desktop\\Darlton\\public\\wp-content\\themes\\Darlton\\node_modules\\neat"
    ]
  ],
  "_from": "git://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
  "_id": "jasmine-node@1.4.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/jasmine-node",
  "_phantomChildren": {
    "fileset": "0.1.8",
    "minimatch": "0.2.14"
  },
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/abe33/jasmine-node/feature_multiple_paths_args/package.json",
      "gitUrl": "git://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
      "httpsUrl": "git+https://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
      "shortcut": "github:abe33/jasmine-node#feature_multiple_paths_args",
      "ssh": "git@github.com:abe33/jasmine-node.git#feature_multiple_paths_args",
      "sshUrl": "git+ssh://git@github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
      "type": "github"
    },
    "name": "jasmine-node",
    "raw": "jasmine-node@git://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
    "rawSpec": "git://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
    "scope": null,
    "spec": "git://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
    "type": "hosted"
  },
  "_requiredBy": [
    "/neat"
  ],
  "_resolved": "git://github.com/abe33/jasmine-node.git#d29d337278a819e1014aece77a3c6924440da03a",
  "_shasum": "68f2257d97e93b060e77f775dbc297f1e77ec8ab",
  "_shrinkwrap": null,
  "_spec": "jasmine-node@git://github.com/abe33/jasmine-node.git#feature_multiple_paths_args",
  "_where": "C:\\Users\\Sam\\Desktop\\Darlton\\public\\wp-content\\themes\\Darlton\\node_modules\\neat",
  "author": {
    "email": "misko@hevery.com",
    "name": "Misko Hevery"
  },
  "bin": {
    "jasmine-node": "bin/jasmine-node"
  },
  "bugs": {
    "url": "https://github.com/mhevery/jasmine-node/issues"
  },
  "contributors": [
    {
      "name": "Chris Moultrie",
      "email": "chris@moultrie.org"
    }
  ],
  "dependencies": {
    "coffee-script": ">=1.0.1",
    "gaze": "~0.3.2",
    "jasmine-reporters": ">=0.2.0",
    "requirejs": ">=0.27.1",
    "underscore": ">= 1.3.1",
    "walkdir": ">= 0.0.1"
  },
  "description": "DOM-less simple JavaScript BDD testing framework for Node",
  "devDependencies": {},
  "gitHead": "d29d337278a819e1014aece77a3c6924440da03a",
  "homepage": "https://github.com/mhevery/jasmine-node#readme",
  "keywords": [
    "bdd",
    "testing"
  ],
  "licenses": [
    "MIT"
  ],
  "main": "lib/jasmine-node",
  "maintainers": "Martin HÃ¤ger <martin.haeger@gmail.com>",
  "name": "jasmine-node",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "jasmine-node\r\n======\r\n\r\n[![Build Status](https://secure.travis-ci.org/spaghetticode/jasmine-node.png)](http://travis-ci.org/spaghetticode/jasmine-node)\r\n\r\nThis node.js module makes the wonderful Pivotal Lab's jasmine\r\n(http://github.com/pivotal/jasmine) spec framework available in\r\nnode.js.\r\n\r\njasmine\r\n-------\r\n\r\nVersion 1.3.1 of Jasmine is currently included with node-jasmine.\r\n\r\nwhat's new\r\n----------\r\n*  Ability to suppress stack trace with <code>--noStack</code>\r\n*  Async tests now run in the expected context instead of the global one\r\n*  --config flag that allows you to assign variables to process.env\r\n*  Terminal Reporters are now available in the Jasmine Object #184\r\n*  Done is now available in all timeout specs #199\r\n*  <code>afterEach</code> is available in requirejs #179\r\n*  Editors that replace instead of changing files should work with autotest #198\r\n*  Jasmine Mock Clock now works!\r\n*  Autotest now works!\r\n*  Using the latest Jasmine!\r\n*  Verbose mode tabs <code>describe</code> blocks much more accurately!\r\n*  Now with more exclamation points!!\r\n\r\ninstall\r\n------\r\n\r\nTo install the latest official version, use NPM:\r\n\r\n    npm install jasmine-node -g\r\n\r\nTo install the latest _bleeding edge_ version, clone this repository and check\r\nout the `beta` branch.\r\n\r\nusage\r\n------\r\n\r\nWrite the specifications for your code in *.js and *.coffee files in the\r\nspec/ directory (note: your specification files must end with either\r\n.spec.js or .spec.coffee; otherwise jasmine-node won't find them!). You\r\ncan use sub-directories to better organise your specs.\r\n\r\nIf you have installed the npm package, you can run it with:\r\n\r\n    jasmine-node spec/\r\n\r\nIf you aren't using npm, you should add `pwd`/lib to the $NODE_PATH\r\nenvironment variable, then run:\r\n\r\n    node lib/jasmine-node/cli.js\r\n\r\n\r\nYou can supply the following arguments:\r\n\r\n  * <code>--autotest</code>, provides automatic execution of specs after each change\r\n  * <code>--coffee</code>, allow execution of .coffee specs\r\n  * <code>--color</code>, indicates spec output should uses color to\r\nindicates passing (green) or failing (red) specs\r\n  * <code>--noColor</code>, do not use color in the output\r\n  * <code>-m, --match REGEXP</code>, match only specs comtaining \"REGEXPspec\"\r\n  * <code>--matchall</code>, relax requirement of \"spec\" in spec file names\r\n  * <code>--verbose</code>, verbose output as the specs are run\r\n  * <code>--junitreport</code>, export tests results as junitreport xml format\r\n  * <code>--output FOLDER</code>, defines the output folder for junitreport files\r\n  * <code>--teamcity</code>, converts all console output to teamcity custom test runner commands. (Normally auto detected.)\r\n  * <code>--runWithRequireJs</code>, loads all specs using requirejs instead of node's native require method\r\n  * <code>--requireJsSetup</code>, file run before specs to include and configure RequireJS\r\n  * <code>--test-dir</code>, the absolute root directory path where tests are located\r\n  * <code>--nohelpers</code>, does not load helpers\r\n  * <code>--forceexit</code>, force exit once tests complete\r\n  * <code>--captureExceptions</code>, listen to global exceptions, report them and exit (interferes with Domains in NodeJs, so do not use if using Domains as well\r\n  * <code>--config NAME VALUE</code>, set a global variable in process.env\r\n  * <code>--noStack</code>, suppress the stack trace generated from a test failure\r\n\r\nasync tests\r\n-----------\r\n\r\njasmine-node includes an alternate syntax for writing asynchronous tests. Accepting\r\na done callback in the specification will trigger jasmine-node to run the test\r\nasynchronously waiting until the done() callback is called.\r\n\r\n```javascript\r\n    it(\"should respond with hello world\", function(done) {\r\n      request(\"http://localhost:3000/hello\", function(error, response, body){\r\n        expect(body).toEqual(\"hello world\");\r\n        done();\r\n      });\r\n    });\r\n```\r\n\r\nAn asynchronous test will fail after 5000 ms if done() is not called. This timeout\r\ncan be changed by setting jasmine.DEFAULT_TIMEOUT_INTERVAL or by passing a timeout\r\ninterval in the specification.\r\n\r\n    it(\"should respond with hello world\", function(done) {\r\n      request(\"http://localhost:3000/hello\", function(error, response, body){\r\n        done();\r\n      }, 250);  // timeout after 250 ms\r\n    });\r\n\r\nCheckout spec/SampleSpecs.js to see how to use it.\r\n\r\nrequirejs\r\n---------\r\n\r\nThere is a sample project in `/spec-requirejs`. It is comprised of:\r\n\r\n1.  `requirejs-setup.js`, this pulls in our wrapper template (next)\r\n1.  `requirejs-wrapper-template`, this builds up requirejs settings\r\n1.  `requirejs.sut.js`, this is a __Su__bject To __T__est, something required by requirejs\r\n1.  `requirejs.spec.js`, the actual jasmine spec for testing\r\n\r\ndevelopment\r\n-----------\r\n\r\nInstall the dependent packages by running:\r\n\r\n    npm install\r\n\r\nRun the specs before you send your pull request:\r\n\r\n    specs.sh\r\n\r\n__Note:__ Some tests are designed to fail in the specs.sh. After each of the\r\nindividual runs completes, there is a line that lists what the expected\r\nPass/Assert/Fail count should be. If you add/remove/edit tests, please be sure\r\nto update this with your PR.\r\n\r\n\r\nchangelog\r\n---------\r\n\r\n*  _1.4.0 - Optional flag to suppress stack trace on test failure (thanks to [Lastalas](https://github.com/Lastalas))_\r\n*  _1.3.1 - Fixed context for async tests (thanks to [omryn](https://github.com/omryn))_\r\n*  _1.3.0 - Added --config flag for changeable testing environments_\r\n*  _1.2.3 - Fixed #179, #184, #198, #199. Fixes autotest, afterEach in requirejs, terminal reporter is in jasmine object, done function missing in async tests_\r\n*  _1.2.2 - Revert Exception Capturing to avoid Breaking Domain Tests_\r\n*  _1.2.1 - Emergency fix for path reference missing_\r\n*  _1.2.0 - Fixed #149, #152, #171, #181, #195. --autotest now works as expected, jasmine clock now responds to the fake ticking as requested, and removed the path.exists warning_\r\n*  _1.1.1 - Fixed #173, #169 (Blocks were not indented in verbose properly, added more documentation to address #180_\r\n*  _1.1.0 - Updated Jasmine to 1.3.1, fixed fs missing, catching uncaught exceptions, other fixes_\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mhevery/jasmine-node.git"
  },
  "scripts": {
    "test": "node lib/jasmine-node/cli.js spec"
  },
  "version": "1.4.0"
}
